"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/config/overrides/index.ts
var overrides_exports = {};
__export(overrides_exports, {
  getAppEnvOverrideCookieName: () => getAppEnvOverrideCookieName,
  getOverrideFromCookie: () => getOverrideFromCookie,
  isOverrideCookie: () => isOverrideCookie,
  parseOverrides: () => parseOverrides
});
module.exports = __toCommonJS(overrides_exports);

// src/config/overrides/constants.ts
var OVERRIDES_COOKIE_PREFIX = "vercel-micro-frontends-override";
var OVERRIDES_ENV_COOKIE_PREFIX = `${OVERRIDES_COOKIE_PREFIX}:env:`;

// src/config/overrides/is-override-cookie.ts
function isOverrideCookie(cookie) {
  return Boolean(cookie.name?.startsWith(OVERRIDES_COOKIE_PREFIX));
}

// src/config/overrides/get-override-from-cookie.ts
function getOverrideFromCookie(cookie) {
  if (!isOverrideCookie(cookie) || !cookie.value)
    return;
  return {
    application: cookie.name.replace(OVERRIDES_ENV_COOKIE_PREFIX, ""),
    host: cookie.value
  };
}

// src/config/overrides/parse-overrides.ts
function parseOverrides(cookies) {
  const overridesConfig = { applications: {} };
  cookies.forEach((cookie) => {
    const override = getOverrideFromCookie(cookie);
    if (!override)
      return;
    overridesConfig.applications[override.application] = {
      environment: { host: override.host }
    };
  });
  return overridesConfig;
}

// src/config/overrides/get-app-env-override-cookie-name.ts
function getAppEnvOverrideCookieName(application) {
  return `${OVERRIDES_ENV_COOKIE_PREFIX}${application}`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getAppEnvOverrideCookieName,
  getOverrideFromCookie,
  isOverrideCookie,
  parseOverrides
});
//# sourceMappingURL=overrides.cjs.map