"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }var _chunkN32LB23Ccjs = require('./chunk-N32LB23C.cjs');var _path = require('path'); var _path2 = _interopRequireDefault(_path);var _fs = require('fs');var _execa = require('execa'); var _execa2 = _interopRequireDefault(_execa);var _findup = require('find-up'); var _findup2 = _interopRequireDefault(_findup);var _chokidar = require('chokidar');var _fastglob = require('fast-glob'); var _fastglob2 = _interopRequireDefault(_fastglob);var _utils = require('@vercel/microfrontends/microfrontends/utils');var _jsoncparser = require('jsonc-parser');var _events = require('events'); var _events2 = _interopRequireDefault(_events);var p=new _events2.default;function m(r,e){p.emit("event",{type:r,data:e})}function h(r){return p.addListener("event",r),()=>{p.removeListener("event",r)}}function er(){try{try{let e=g();if(e){let t=_path.join.call(void 0, e,".vercel","repo.json");if(_fs.existsSync.call(void 0, t)){_chunkN32LB23Ccjs.f.call(void 0, "Found vercel repo directory",t);let n=JSON.parse(_fs.readFileSync.call(void 0, t,"utf8"));_chunkN32LB23Ccjs.f.call(void 0, "Found vercel repo.json",n);let i=_path.relative.call(void 0, e,process.cwd()),s=n.projects.find(a=>a.directory===i);if(s)return{ownerId:n.orgId,projectId:s.id}}}}catch(e){_chunkN32LB23Ccjs.f.call(void 0, "Error finding vercel repo",e)}let r=_findup2.default.sync(e=>_findup2.default.sync.exists(_path.join.call(void 0, e,".vercel","project.json"))?e:void 0,{type:"directory"});if(_chunkN32LB23Ccjs.f.call(void 0, "Found vercel directory",r),r){let e=JSON.parse(_fs.readFileSync.call(void 0, _path.join.call(void 0, r,".vercel","project.json"),"utf8"));return _chunkN32LB23Ccjs.f.call(void 0, "Found vercel project.json",e),{ownerId:e.orgId,projectId:e.projectId}}console.log("[vercel-toolbar] No project info found. Make sure you run `vc link` in your project directory.")}catch(r){_chunkN32LB23Ccjs.f.call(void 0, "Error finding project info",r);return}}function C(r){try{return _fs.readFileSync.call(void 0, _path.resolve.call(void 0, r),"utf-8")}catch(e){throw _chunkN32LB23Ccjs.f.call(void 0, "Error reading microfrontend config",e),new Error(`Error parsing microfrontend config: ${e.message}`)}}function I(){let r=_findup2.default.sync("package.json");if(!r)return;let t=JSON.parse(_fs.readFileSync.call(void 0, r,"utf-8")).name,n=_fastglob2.default.globSync("**/{microfrontends.json,microfrontends.jsonc}",{cwd:g(),absolute:!0,onlyFiles:!0,followSymbolicLinks:!1,ignore:["**/node_modules/**","**/.git/**"]});for(let i of n){let s=_fs.readFileSync.call(void 0, i,"utf-8"),a=_jsoncparser.parse.call(void 0, s);if("applications"in a&&Object.entries(a.applications).some(([J,k])=>J===t||k.packageName===t))return i}}function P(){try{let r=_utils.findConfig.call(void 0, {dir:"."});if(!r)return I();let e=_fs.readFileSync.call(void 0, r,"utf-8"),t=_jsoncparser.parse.call(void 0, e);if("partOf"in t){let i=_(t.partOf);if(!i)throw new Error(`Could not find default application "${t.partOf}" in repository`);return _nullishCoalesce(_utils.findConfig.call(void 0, {dir:i}), () => (void 0))}return r}catch (e2){return}}function _(r){let e=_fastglob2.default.globSync("**/package.json",{cwd:g(),absolute:!0,onlyFiles:!0,followSymbolicLinks:!1,ignore:["**/node_modules/**","**/.git/**"]}),t;for(let n of e){let i=_fs.readFileSync.call(void 0, n,"utf-8");if(JSON.parse(i).name===r){t=n;break}}return t?_path.dirname.call(void 0, t):void 0}function d(){try{let r=_execa2.default.sync("git",["branch","--show-current"]);if(!r.stdout&&r.stderr){_chunkN32LB23Ccjs.f.call(void 0, "Error getting current git branch",r.stderr);return}return r.stdout.trim()}catch(r){_chunkN32LB23Ccjs.f.call(void 0, "Error getting current git branch",r);return}}function g(){try{let r=_execa2.default.sync("git",["rev-parse","--show-toplevel"]);if(!r.stdout&&r.stderr){_chunkN32LB23Ccjs.f.call(void 0, "Error getting git directory",r.stderr);return}return r.stdout.trim()}catch(r){_chunkN32LB23Ccjs.f.call(void 0, "Error getting git directory",r);return}}var y;function E(){if(y)return;let r=g();if(!r)return;let e=d(),t=_path.join.call(void 0, r,".git","HEAD");y=_chokidar.watch.call(void 0, t).on("change",()=>{let n=d();n!==e&&(e=n,m("branch-change",e))})}var _http = require('http');var _app = require('@tinyhttp/app');var _stripansi = require('strip-ansi'); var _stripansi2 = _interopRequireDefault(_stripansi);var T=new (0, _app.App)().use((r,e,t)=>{e.setHeader("Access-Control-Allow-Origin","*"),t()}).options("/events",(r,e)=>{e.writeHead(200,{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS, GET","Access-Control-Allow-Headers":r.headers["access-control-request-headers"]}),e.end()}).get("/events",(r,e)=>{e.writeHead(200,{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive"});let t=h(n=>{e.write(`event: ${n.type}
data:${JSON.stringify(n.data)}

`)});e.on("close",t)}).get("/branch",(r,e)=>{e.json({branch:d()})}).get("/microfrontend-config",(r,e)=>{try{let t=P(),n=t?C(t):null;e.json({contents:n})}catch(t){e.status(500).json({error:t.message})}});function gr({portFromConfig:r}){let e=_nullishCoalesce(r, () => (V())),t=_http.createServer.call(void 0, (n,i)=>T.handler(n,i));return t.unref(),t.on("error",n=>{_chunkN32LB23Ccjs.f.call(void 0, "Toolbar dev server error",n)}),t.listen(e,()=>{_chunkN32LB23Ccjs.f.call(void 0, `Toolbar dev server listening on port ${e}`),E()}),e}var l=43214;function V(){try{let r=_execa2.default.sync("node",[_path2.default.join(__dirname,__dirname.endsWith("dist")?".":"..","scripts","get-free-port.cjs")]);if(!r.stdout&&r.stderr)return _chunkN32LB23Ccjs.f.call(void 0, "Unexpected error when getting a free port",r.stderr),l;let e=Number(_stripansi2.default.call(void 0, r.stdout).trim());return Number.isNaN(e)?(_chunkN32LB23Ccjs.f.call(void 0, `Error parsing free port: '${r.stdout}'`),l):e}catch(r){return _chunkN32LB23Ccjs.f.call(void 0, "Error running the get-free-port script",r),l}}exports.a = er; exports.b = d; exports.c = gr;
